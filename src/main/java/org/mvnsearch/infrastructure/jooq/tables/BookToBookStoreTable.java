/*
 * This file is generated by jOOQ.
 */
package org.mvnsearch.infrastructure.jooq.tables;


import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.mvnsearch.infrastructure.jooq.JooqSchema;
import org.mvnsearch.infrastructure.jooq.Keys;
import org.mvnsearch.infrastructure.jooq.tables.records.BookToBookStoreRecord;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BookToBookStoreTable extends TableImpl<BookToBookStoreRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>jooq.book_to_book_store</code>
     */
    public static final BookToBookStoreTable BOOK_TO_BOOK_STORE = new BookToBookStoreTable();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<BookToBookStoreRecord> getRecordType() {
        return BookToBookStoreRecord.class;
    }

    /**
     * The column <code>jooq.book_to_book_store.name</code>.
     */
    public final TableField<BookToBookStoreRecord, String> NAME = createField(DSL.name("name"), SQLDataType.VARCHAR(400).nullable(false), this, "");

    /**
     * The column <code>jooq.book_to_book_store.book_id</code>.
     */
    public final TableField<BookToBookStoreRecord, Integer> BOOK_ID = createField(DSL.name("book_id"), SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>jooq.book_to_book_store.stock</code>.
     */
    public final TableField<BookToBookStoreRecord, Integer> STOCK = createField(DSL.name("stock"), SQLDataType.INTEGER, this, "");

    private BookToBookStoreTable(Name alias, Table<BookToBookStoreRecord> aliased) {
        this(alias, aliased, null);
    }

    private BookToBookStoreTable(Name alias, Table<BookToBookStoreRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>jooq.book_to_book_store</code> table reference
     */
    public BookToBookStoreTable(String alias) {
        this(DSL.name(alias), BOOK_TO_BOOK_STORE);
    }

    /**
     * Create an aliased <code>jooq.book_to_book_store</code> table reference
     */
    public BookToBookStoreTable(Name alias) {
        this(alias, BOOK_TO_BOOK_STORE);
    }

    /**
     * Create a <code>jooq.book_to_book_store</code> table reference
     */
    public BookToBookStoreTable() {
        this(DSL.name("book_to_book_store"), null);
    }

    public <O extends Record> BookToBookStoreTable(Table<O> child, ForeignKey<O, BookToBookStoreRecord> key) {
        super(child, key, BOOK_TO_BOOK_STORE);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : JooqSchema.JOOQ;
    }

    @Override
    public UniqueKey<BookToBookStoreRecord> getPrimaryKey() {
        return Keys.KEY_BOOK_TO_BOOK_STORE_PRIMARY;
    }

    @Override
    public BookToBookStoreTable as(String alias) {
        return new BookToBookStoreTable(DSL.name(alias), this);
    }

    @Override
    public BookToBookStoreTable as(Name alias) {
        return new BookToBookStoreTable(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public BookToBookStoreTable rename(String name) {
        return new BookToBookStoreTable(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public BookToBookStoreTable rename(Name name) {
        return new BookToBookStoreTable(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, Integer, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
