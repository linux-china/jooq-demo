/*
 * This file is generated by jOOQ.
 */
package org.mvnsearch.infrastructure.jooq.tables.records;


import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Table;

import javax.annotation.Nullable;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.mvnsearch.infrastructure.jooq.tables.Language;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Entity
@Table(
    name = "language",
    schema = "jooq"
)
public class LanguageRecord extends UpdatableRecordImpl<LanguageRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>jooq.language.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>jooq.language.id</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", nullable = false)
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>jooq.language.cd</code>.
     */
    public void setCd(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>jooq.language.cd</code>.
     */
    @Column(name = "cd", nullable = false, length = 2)
    public String getCd() {
        return (String) get(1);
    }

    /**
     * Setter for <code>jooq.language.description</code>.
     */
    public void setDescription(@Nullable String value) {
        set(2, value);
    }

    /**
     * Getter for <code>jooq.language.description</code>.
     */
    @Column(name = "description", length = 50)
    @Nullable
    public String getDescription() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LanguageRecord
     */
    public LanguageRecord() {
        super(Language.LANGUAGE);
    }

    /**
     * Create a detached, initialised LanguageRecord
     */
    public LanguageRecord(Integer id, String cd, @Nullable String description) {
        super(Language.LANGUAGE);

        setId(id);
        setCd(cd);
        setDescription(description);
        resetTouchedOnNotNull();
    }
}
